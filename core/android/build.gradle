plugins {
    id 'com.android.library'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: "../../dependencies.gradle"

android {
    namespace "com.simple.coreapp"

    defaultConfig {
        compileSdk project.ext.compileSdkVersion
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        multiDexEnabled = true
    }
    compileOptions {
        sourceCompatibility project.ext.javaVersion
        targetCompatibility project.ext.javaVersion
    }
    buildFeatures {
        viewBinding true
    }
//    kotlinOptions {
//        jvmTarget = project.ext.javaVersion.toString()
//    }
    lintOptions {
        abortOnError false
    }
}
dependencies {

    implementation project(':core:base')

    implementation project(':library:job')
    implementation project(':library:task')
    implementation project(':library:state')
    implementation project(':library:event')
    implementation project(':library:image')
    implementation project(':library:binding')

    implementation project(':library:analytics')
    implementation project(':library:crashlytics')

    implementation project(':library:adapter')
    kapt project(':library:adapter-processor')

    implementation project(':library:deeplink')
    kapt project(':library:deeplink-processor')

    implementation project(':library:autobind')
    kapt project(':library:autobind-processor')

    api(googleDependencies.auto_service){
        exclude group: 'com.google.guava'
    }
    kapt googleDependencies.auto_service

    implementation koinDependencies.values()
    implementation androidxDependencies.values()
    implementation coroutinesDependencies.values()

    implementation uiDependencies.glide
    implementation uiDependencies.lottie
    implementation uiDependencies.shimmer
    implementation uiDependencies.flexbox
    implementation uiDependencies.material

    implementation networkingDependencies.converter_jackson
    implementation networkingDependencies.logging_interceptor
}